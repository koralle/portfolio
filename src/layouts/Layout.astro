---
import Loader from '../components/Loader.astro';
import '../styles/index.css';
import '../styles/preflight.css';

const description = 'White seal, frontend engineer. Surfing the endless waves of evolving web technologies and design trends, always swimming forward with curiosity.'
---

<!doctype html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="description" content={description} />
    <meta name="generator" content={Astro.generator} />
    <meta name="colorscheme" content="dark light" />
    <meta property="og:site_name" content="koralle's Portfolio" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="koralle's Portfolio" />
    <meta property="og:description" content={description} />
    <meta property="og:url" content="https://me.koralle-mgmg.com" />
    <meta property="og:image" content="https://me.koralle-mgmg.com/images/ogp-card.webp" />
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:site" content="@koralle_tech" />
    <meta property="twitter:title" content="koralle's Portfolio" />
    <meta property="twitter:url" content="https://me.koralle-mgmg.com" />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content="https://me.koralle-mgmg.com/images/ogp-card.webp" />
    <title>koralle's Portfolio</title>
  </head>
  <body>
    <Loader />
    <main id="main-content">
      <slot />
    </main>
  </body>
</html>

<script>
  import { gsap } from 'gsap';
  import { SplitText } from 'gsap/SplitText';

  gsap.registerPlugin(SplitText);

  const onDomContentsLoaded = () => {
    const loaderText = document.querySelector('#loader-text-inner');
    if (!loaderText) return;

    const split = new SplitText(loaderText, { type: 'words,chars' });

    gsap
      .timeline({
        repeat: -1,
        repeatDelay: 1
      })
      .from(split.chars, {
        y: '100%',
        stagger: 0.05,
        duration: 1,
        ease: 'power4.out',
      })
      .to(loaderText, {
        y: -20,
        opacity: 0,
        duration: 0.5,
        ease: 'power4.in',
        delay: 0.5,
        onComplete: () => {
          document.dispatchEvent(new CustomEvent('loader-animation-finished'));
        },
      },
      '-=0.5',
    )
      .to(
        '#loader',
        {
          opacity: 0,
          duration: 1,
          ease: 'power4.inOut',
          onComplete: () => {
            const loader = document.querySelector<HTMLElement>('#loader');
            if (loader) {
              loader.style.display = 'none';
            }
          },
        },
        '-=0.5',
      );
  };

  document.addEventListener('DOMContentLoaded', onDomContentsLoaded);
</script>
